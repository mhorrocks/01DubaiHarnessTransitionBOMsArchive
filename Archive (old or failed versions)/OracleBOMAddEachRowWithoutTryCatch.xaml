<?xml version="1.0" encoding="utf-8"?>
<Activity mc:Ignorable="sap sap2010" x:Class="OracleBOMAddEachRowWithoutTryCatch" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Orchestrator Queue item containing assembly number and link to folder containing Excel BOM file" Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property sap2010:Annotation.AnnotationText="Loop counter" Name="io_RowCounter" Type="InOutArgument(ui:GenericValue)" />
    <x:Property sap2010:Annotation.AnnotationText="The row of data from dtBOM used to add BOM to Oracle" Name="in_Row" Type="InArgument(sd:DataRow)" />
    <x:Property sap2010:Annotation.AnnotationText="Datatable that contains the BOM ready to add to Oracle" Name="in_dt_BOM" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>1506,9874</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="19">
      <x:String>System.Activities</x:String>
      <x:String>System.Data</x:String>
      <x:String>System</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="17">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.MobileAutomation</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="_______________&#xA;Description:&#xA;Adds assembly BOM by filling in component details (line #, part #, qty, etc.). This workflow saves the BOM record after each component is added. It re-queries the BOM and inserts a new component line each because then it can capture component errors and also because the selectors are unstable for subsequent rows. It gets the component data from argument inDtBOM.&#xA;&#xA;Precondition:&#xA;Oracle must be opened, logged in to BOM user responsibility with BOM form open. inDtBOM must contain data.&#xA;&#xA;Post condition:&#xA;Oracle BOM row record is added.&#xA;&#xA;In arguments:&#xA;in_dt_BOM is the datatable that contains the BOM ready to add to Oracle&#xA;in_Row is the row of data from dtBOM used to add BOM to Oracle&#xA;in_TransactionItem (part of REFramework) is the Orchestrator Queue item containing assembly number and link to folder containing Excel BOM file&#xA;io_RowCounter  is a loop counter&#xA;&#xA;Out arguments:&#xA;io_RowCounter is a loop counter&#xA;out_AssyNumber is the BOM assembly part number used for exception error messages&#xA;&#xA;Keywords:&#xA;BOM&#xA;Bill of Material&#xA;Oracle&#xA;_______________" DisplayName="OracleBOMAddEachRowWithoutTryCatch" sap:VirtualizedContainerService.HintSize="1486,9774" sap2010:WorkflowViewState.IdRef="Sequence_8">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:QueueItem" sap2010:Annotation.AnnotationText="Local copy of argument inTransactionItem" Name="transactionItem" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Local copy of inDtBOM" Name="dtBOM" />
      <Variable x:TypeArguments="sd:DataRow" sap2010:Annotation.AnnotationText="The row of data from dtBOM used to add BOM to Oracle" Name="row" />
      <Variable x:TypeArguments="ui:GenericValue" sap2010:Annotation.AnnotationText="Variable used to temporarily store the BOM component attributes to then write them to Oracle. Example is Oracle line #, Oracle component #, qty, etc." Name="bomValue" />
      <Variable x:TypeArguments="ui:GenericValue" sap2010:Annotation.AnnotationText="Loop counter" Name="rowCounter" />
      <Variable x:TypeArguments="ui:GenericValue" sap2010:Annotation.AnnotationText="BOM component part number used for exception error messages&#xA;" Name="componentNumber" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Stores the BOM component record field that is currently being added for use in exception error report" Name="bomField" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Multiple Assign in arguments to variables" sap:VirtualizedContainerService.HintSize="1444,191" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="ui:QueueItem">[transactionItem]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="ui:QueueItem">[in_TransactionItem]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="sd:DataTable">[dtBOM]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="sd:DataTable">[in_dt_BOM]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="sd:DataRow">[row]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="sd:DataRow">[in_Row]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="ui:GenericValue">[rowCounter]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="ui:GenericValue">[io_RowCounter]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'jp2launcher.exe Oracle'" sap:VirtualizedContainerService.HintSize="1444,8949" sap2010:WorkflowViewState.IdRef="WindowScope_1" InformativeScreenshot="8783780af3ca14874d23522ddded420e" Selector="&lt;wnd app='jp2launcher.exe' cls='SunAwtFrame' title='Oracle Applications - *' /&gt;">
      <ui:WindowScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1410,8803" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'page tab  Main' - Click main tab" sap:VirtualizedContainerService.HintSize="1368,106" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="2927a5dd78ee42a8ace2f8130eab0e43" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Main' role='page tab' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:Click.Target>
            </ui:Click>
            <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'panel' - Wait for main tab to load" sap:VirtualizedContainerService.HintSize="1368,106" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_6">
              <ui:WaitUiElementAppear.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="dc26d99a69b95c376f06766ac83c73d7" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Main' role='page tab' /&gt;&lt;java role='panel' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:WaitUiElementAppear.Target>
            </ui:WaitUiElementAppear>
            <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Sno." DisplayName="Get Row Item - BOM item sequence" sap:VirtualizedContainerService.HintSize="1368,64" sap2010:WorkflowViewState.IdRef="GetRowItem_1" Row="[row]">
              <ui:GetRowItem.Value>
                <OutArgument x:TypeArguments="ui:GenericValue">[bomValue]</OutArgument>
              </ui:GetRowItem.Value>
            </ui:GetRowItem>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1368,8315" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[rowCounter= 1]" DisplayName="If - Different process for 1st row versus subsequent" sap:VirtualizedContainerService.HintSize="1326,6027" sap2010:WorkflowViewState.IdRef="If_9">
                <If.Then>
                  <Sequence DisplayName="Sequence (1st row)" sap:VirtualizedContainerService.HintSize="526,5515" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Part Number" DisplayName="Get Row Item - BOM component part # store variable for error check" sap:VirtualizedContainerService.HintSize="484,64" sap2010:WorkflowViewState.IdRef="GetRowItem_14" Row="[row]">
                      <ui:GetRowItem.Value>
                        <OutArgument x:TypeArguments="ui:GenericValue">[componentNumber]</OutArgument>
                      </ui:GetRowItem.Value>
                    </ui:GetRowItem>
                    <Assign DisplayName="Assign BOM field Item Seq first row" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[bomField]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">item sequence</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="" ClickBeforeTyping="True" DisplayName="Type Into 'text Main' - BOM item sequence first row" EmptyField="True" sap:VirtualizedContainerService.HintSize="484,165" sap2010:WorkflowViewState.IdRef="TypeInto_2" Text="[bomValue.Trim]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="3eadd60fafed09720e3c4ca39de77972" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java idx='1' name='Item Seq Required' role='text' /&gt;" WaitForReady="COMPLETE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:TypeInto.Target>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:TypeInto>
                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey tab from item seq to next field first row" sap:VirtualizedContainerService.HintSize="484,154" sap2010:WorkflowViewState.IdRef="SendHotkey_15" Key="tab" KeyModifiers="None" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="5ab6acf92e2b972401a624b8025114cd" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java idx='1' name='Item Seq Required' role='text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File Error check item seq first row" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="ErrorCheckItemSeq.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[transactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_BOMField">[bomField]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_ComponentNumber">[componentNumber]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_BOMValue">[bomValue]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="OP Seq" DisplayName="Get Row Item - BOM op seq (1st row)" sap:VirtualizedContainerService.HintSize="484,64" sap2010:WorkflowViewState.IdRef="GetRowItem_2" Row="[row]">
                      <ui:GetRowItem.Value>
                        <OutArgument x:TypeArguments="ui:GenericValue">[bomValue]</OutArgument>
                      </ui:GetRowItem.Value>
                    </ui:GetRowItem>
                    <Assign DisplayName="Assign BOM field op seq first row" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[bomField]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">operation sequence</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into 'client Oracle' - BOM op seq fIrst row" EmptyField="True" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="TypeInto_9" Text="[bomValue.Trim]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="199906640045da8eea56ba13877a3a0f" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Operation Seq RequiredList of Values' role='text' /&gt;" WaitForReady="COMPLETE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Send Hotkey tab from op seq to next field first row" sap:VirtualizedContainerService.HintSize="484,154" sap2010:WorkflowViewState.IdRef="SendHotkey_17" Key="tab" KeyModifiers="None" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="46f15160aeff60251d32659f9ff83b2d" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Main tab page Operation Seq RequiredList of Values' role='text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File Error check op seq first row" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="ErrorCheckOperationSeq.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[transactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_BOMField">[bomField]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_ComponentNumber">[componentNumber]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_BOMValue">[bomValue]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Part Number" DisplayName="Get Row Item - BOM component (1st row)" sap:VirtualizedContainerService.HintSize="484,64" sap2010:WorkflowViewState.IdRef="GetRowItem_3" Row="[row]">
                      <ui:GetRowItem.Value>
                        <OutArgument x:TypeArguments="ui:GenericValue">[bomValue]</OutArgument>
                      </ui:GetRowItem.Value>
                    </ui:GetRowItem>
                    <Assign DisplayName="Assign BOM field component first row" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[bomField]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">component</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into 'text  Component Required' - BOM component first row" EmptyField="True" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="TypeInto_10" Text="[bomValue.Trim]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="7d1bda5ad8a5ffe47c7b47fee1e40f9a" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Component RequiredList of Values' role='text' /&gt;" WaitForReady="COMPLETE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Send Hotkey tab from component to next field first row" sap:VirtualizedContainerService.HintSize="484,154" sap2010:WorkflowViewState.IdRef="SendHotkey_19" Key="tab" KeyModifiers="None" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="30f784246a6a185cd5752df9fa92400e" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Component RequiredList of Values' role='text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File Error check component first row" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="ErrorCheckComponent.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[transactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_BOMField">[bomField]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_ComponentNumber">[componentNumber]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_BOMValue">[bomValue]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="QTY" DisplayName="Get Row Item - BOM quantity (1st row)" sap:VirtualizedContainerService.HintSize="484,64" sap2010:WorkflowViewState.IdRef="GetRowItem_4" Row="[row]">
                      <ui:GetRowItem.Value>
                        <OutArgument x:TypeArguments="ui:GenericValue">[bomValue]</OutArgument>
                      </ui:GetRowItem.Value>
                    </ui:GetRowItem>
                    <Assign DisplayName="Assign BOM field quantity first row" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[bomField]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">quantity</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into 'text Main' - BOM qty first row" EmptyField="True" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="TypeInto_18" Text="[bomValue.Trim]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="5dec756735710b65a477f8cb5aafac9a" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java idx='1' name='Quantity Required' role='text' /&gt;" WaitForReady="COMPLETE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Send Hotkey tab from quantity to next field first row" sap:VirtualizedContainerService.HintSize="484,154" sap2010:WorkflowViewState.IdRef="SendHotkey_21" Key="tab" KeyModifiers="None" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="9c54a26d43bf8fe5de960050b3c959ca" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java idx='1' name='Quantity Required' role='text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File Error check quantity first row" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="ErrorCheckQuantity.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[transactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_BOMField">[bomField]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_ComponentNumber">[componentNumber]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_BOMValue">[bomValue]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'page tab' - Material control tab (1st row)" sap:VirtualizedContainerService.HintSize="484,106" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT">
                      <ui:Click.CursorPosition>
                        <ui:CursorPosition Position="Center">
                          <ui:CursorPosition.OffsetX>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetX>
                          <ui:CursorPosition.OffsetY>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetY>
                        </ui:CursorPosition>
                      </ui:Click.CursorPosition>
                      <ui:Click.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="ff74898824e22416b11b37ddca13108e" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Material Control' role='page tab' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:Click.Target>
                    </ui:Click>
                    <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'panel' - Wiat for material control tab to load (first row)" sap:VirtualizedContainerService.HintSize="484,106" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_7">
                      <ui:WaitUiElementAppear.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="0f8a228032f8c5c1853da07c79462ed3" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Material Control' role='page tab' /&gt;&lt;java role='panel' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:WaitUiElementAppear.Target>
                    </ui:WaitUiElementAppear>
                    <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Supply Type" DisplayName="Get Row Item - BOM supply type (1st row)" sap:VirtualizedContainerService.HintSize="484,64" sap2010:WorkflowViewState.IdRef="GetRowItem_5" Row="[row]">
                      <ui:GetRowItem.Value>
                        <OutArgument x:TypeArguments="ui:GenericValue">[bomValue]</OutArgument>
                      </ui:GetRowItem.Value>
                    </ui:GetRowItem>
                    <Assign DisplayName="Assign BOM field supply type first row" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[bomField]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">supply type</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into 'text Material' - BOM supply type first row" EmptyField="True" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="TypeInto_11" Text="[bomValue.Trim]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="635d7a49e2ba66ca3cd7cda82e5cb2bf" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Material Control tab page Supply TypeList of Values' role='text' /&gt;" WaitForReady="COMPLETE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Send Hotkey tab from supply type to next field first row" sap:VirtualizedContainerService.HintSize="484,154" sap2010:WorkflowViewState.IdRef="SendHotkey_23" Key="tab" KeyModifiers="None" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="eac772bf4ba452ef2c12e1cb2a2ae210" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Material Control tab page Supply TypeList of Values' role='text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File Error check supply type first row" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="ErrorCheckSupplyType.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[transactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_BOMField">[bomField]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_ComponentNumber">[componentNumber]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_BOMValue">[bomValue]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Sub Inventory" DisplayName="Get Row Item - BOM subinventory (1st row)" sap:VirtualizedContainerService.HintSize="484,64" sap2010:WorkflowViewState.IdRef="GetRowItem_6" Row="[row]">
                      <ui:GetRowItem.Value>
                        <OutArgument x:TypeArguments="ui:GenericValue">[bomValue]</OutArgument>
                      </ui:GetRowItem.Value>
                    </ui:GetRowItem>
                    <Assign DisplayName="Assign BOM field subinventory first row" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[bomField]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">subinventory</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into 'text Locator' - BOM subinventory first row" EmptyField="True" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="TypeInto_13" Text="[bomValue.Trim]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="5f2230d88dd110be433ed2ec7785c689" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='SubinventoryList of Values' role='text' /&gt;" WaitForReady="COMPLETE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Send Hotkey tab from subinventory to next field first row" sap:VirtualizedContainerService.HintSize="484,154" sap2010:WorkflowViewState.IdRef="SendHotkey_25" Key="tab" KeyModifiers="None" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="eac466f306fcdbad67d55b2c9918464a" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='SubinventoryList of Values' role='text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File Error check subinventory first row" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="ErrorCheckSubinventory.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[transactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_BOMField">[bomField]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_ComponentNumber">[componentNumber]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_BOMValue">[bomValue]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Locator" DisplayName="Get Row Item - BOM locator (1st row)" sap:VirtualizedContainerService.HintSize="484,64" sap2010:WorkflowViewState.IdRef="GetRowItem_7" Row="[row]">
                      <ui:GetRowItem.Value>
                        <OutArgument x:TypeArguments="ui:GenericValue">[bomValue]</OutArgument>
                      </ui:GetRowItem.Value>
                    </ui:GetRowItem>
                    <Assign DisplayName="Assign BOM field locator first row" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[bomField]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">locator</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[bomValue= &quot;...&quot;]" DisplayName="If - Clear BOM locator if just &quot;...&quot; (1st row)" sap:VirtualizedContainerService.HintSize="484,207" sap2010:WorkflowViewState.IdRef="If_7">
                      <If.Then>
                        <Assign DisplayName="Assign - Clear bomValue if &quot;...&quot; (first row)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:GenericValue">[bomValue]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:GenericValue">[Nothing]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                    </If>
                    <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into 'text Locator' - BOM locator first row" EmptyField="True" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="TypeInto_8" Text="[bomValue.Trim]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="ef979b2416b22eff603fd957b1daa7b8" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Locator*List of Values' role='text' /&gt;" WaitForReady="COMPLETE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Send Hotkey tab from locator to next field first row" sap:VirtualizedContainerService.HintSize="484,154" sap2010:WorkflowViewState.IdRef="SendHotkey_27" Key="tab" KeyModifiers="None" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="19a9453b7d380c1858a75d9f0ca196ab" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Locator*List of Values' role='text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File Error check locator first row" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="ErrorCheckLocator.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[transactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_BOMField">[bomField]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_ComponentNumber">[componentNumber]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_BOMValue">[bomValue]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Sequence (subsequent rows)" sap:VirtualizedContainerService.HintSize="755,5880" sap2010:WorkflowViewState.IdRef="Sequence_9">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Part Number" DisplayName="Get Row Item - BOM component part # store variable for error check subsequent row" sap:VirtualizedContainerService.HintSize="713,64" sap2010:WorkflowViewState.IdRef="GetRowItem_15" Row="[row]">
                      <ui:GetRowItem.Value>
                        <OutArgument x:TypeArguments="ui:GenericValue">[componentNumber]</OutArgument>
                      </ui:GetRowItem.Value>
                    </ui:GetRowItem>
                    <Assign DisplayName="Assign BOM field Item Seq subsequent row" sap:VirtualizedContainerService.HintSize="713,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[bomField]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">item sequence</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="selector was&#xA;&lt;java name='Bills of Material*' role='internal frame' /&gt;&#xA;&lt;java idx='1' name='Item Seq Required' role='text' /&gt;&#xA;&lt;nav up='1' /&gt;&#xA;&lt;java name='Main tab page*Item Seq Required' role='text' /&gt;" DisplayName="Type Into 'text Main' - BOM item sequence subsequent rows" sap:VirtualizedContainerService.HintSize="713,236" sap2010:WorkflowViewState.IdRef="TypeInto_22" Text="[bomValue.Trim]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="3d66e74840724849febe260c7ba34200" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java idx='2' name='Item Seq Required' role='text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:TypeInto.Target>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:TypeInto>
                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey tab from item seq to next field subsequent row" sap:VirtualizedContainerService.HintSize="713,154" sap2010:WorkflowViewState.IdRef="SendHotkey_16" Key="tab" KeyModifiers="None" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="09b9e872260d65afa961790b06f8f302" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java idx='2' name='Item Seq Required' role='text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File Error check item seq subsequent row" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="ErrorCheckItemSeq.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[transactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_BOMField">[bomField]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_ComponentNumber">[componentNumber]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_BOMValue">[bomValue]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="OP Seq" DisplayName="Get Row Item - BOM op seq (Subsequent rows)" sap:VirtualizedContainerService.HintSize="713,64" sap2010:WorkflowViewState.IdRef="GetRowItem_8" Row="[row]">
                      <ui:GetRowItem.Value>
                        <OutArgument x:TypeArguments="ui:GenericValue">[bomValue]</OutArgument>
                      </ui:GetRowItem.Value>
                    </ui:GetRowItem>
                    <Assign DisplayName="Assign BOM field Op Seq subsequent row" sap:VirtualizedContainerService.HintSize="713,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[bomField]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">operation sequence</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into 'client Oracle' - BOM op seq subsequent rows" EmptyField="True" sap:VirtualizedContainerService.HintSize="713,134" sap2010:WorkflowViewState.IdRef="TypeInto_23" Text="[bomValue.Trim]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="30c178b30897747ec6057509c312287e" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java idx='1' name='Operation Seq RequiredList of Values' role='text' /&gt;&lt;nav up='1' /&gt;&lt;java idx='2' name='Operation Seq RequiredList of Values' role='text' /&gt;" WaitForReady="COMPLETE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey tab from op seq to next field subsequent row" sap:VirtualizedContainerService.HintSize="713,154" sap2010:WorkflowViewState.IdRef="SendHotkey_18" Key="tab" KeyModifiers="None" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b8d375c45e77d655284858cc345757ae" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java idx='1' name='Operation Seq RequiredList of Values' role='text' /&gt;&lt;nav up='1' /&gt;&lt;java idx='2' name='Operation Seq RequiredList of Values' role='text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File Error check op seq subsequent row" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="ErrorCheckOperationSeq.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[transactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_BOMField">[bomField]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_ComponentNumber">[componentNumber]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_BOMValue">[bomValue]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Part Number" DisplayName="Get Row Item - BOM component (subsequent rows)" sap:VirtualizedContainerService.HintSize="713,64" sap2010:WorkflowViewState.IdRef="GetRowItem_9" Row="[row]">
                      <ui:GetRowItem.Value>
                        <OutArgument x:TypeArguments="ui:GenericValue">[bomValue]</OutArgument>
                      </ui:GetRowItem.Value>
                    </ui:GetRowItem>
                    <Assign DisplayName="Assign BOM field component subsequent row" sap:VirtualizedContainerService.HintSize="713,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[bomField]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">component</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'text  Component Required' - BOM component subsequent rows" sap:VirtualizedContainerService.HintSize="713,134" sap2010:WorkflowViewState.IdRef="TypeInto_24" Text="[bomValue.Trim]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="daee7269a9020c5609d6f4bac7216053" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java idx='2' name='Component RequiredList of Values' role='text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey tab from component to next field subsequent row" sap:VirtualizedContainerService.HintSize="713,154" sap2010:WorkflowViewState.IdRef="SendHotkey_20" Key="tab" KeyModifiers="None" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="3cd1bab4ba8edcffa3dc04ce9c33e673" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java idx='2' name='Component RequiredList of Values' role='text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File Error check op seq subsequent row" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="ErrorCheckComponent.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[transactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_BOMField">[bomField]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_ComponentNumber">[componentNumber]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_BOMValue">[bomValue]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="QTY" DisplayName="Get Row Item - BOM quantity (subsequent rows)" sap:VirtualizedContainerService.HintSize="713,64" sap2010:WorkflowViewState.IdRef="GetRowItem_10" Row="[row]">
                      <ui:GetRowItem.Value>
                        <OutArgument x:TypeArguments="ui:GenericValue">[bomValue]</OutArgument>
                      </ui:GetRowItem.Value>
                    </ui:GetRowItem>
                    <Assign DisplayName="Assign BOM field quantity subsequent row" sap:VirtualizedContainerService.HintSize="713,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[bomField]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">quantity</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into 'text Main' - BOM qty  subsequent rows" EmptyField="True" sap:VirtualizedContainerService.HintSize="713,134" sap2010:WorkflowViewState.IdRef="TypeInto_25" Text="[bomValue.Trim]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="ed58cfa2776231afc715b8d602bcb5d4" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java idx='2' name='Quantity Required' role='text' /&gt;" WaitForReady="COMPLETE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Send Hotkey tab from quantity to next field subsequent row" sap:VirtualizedContainerService.HintSize="713,154" sap2010:WorkflowViewState.IdRef="SendHotkey_22" Key="tab" KeyModifiers="None" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="154c66c7d84a02b77c6fb4d21cf07a43" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java idx='2' name='Quantity Required' role='text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File Error check quantity subsequent row" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="ErrorCheckQuantity.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[transactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_BOMField">[bomField]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_ComponentNumber">[componentNumber]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_BOMValue">[bomValue]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'page tab' - Material control tab (subsequent rows)" sap:VirtualizedContainerService.HintSize="713,106" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT">
                      <ui:Click.CursorPosition>
                        <ui:CursorPosition Position="Center">
                          <ui:CursorPosition.OffsetX>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetX>
                          <ui:CursorPosition.OffsetY>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetY>
                        </ui:CursorPosition>
                      </ui:Click.CursorPosition>
                      <ui:Click.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="ff74898824e22416b11b37ddca13108e" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Material Control' role='page tab' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:Click.Target>
                    </ui:Click>
                    <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'panel' - Wiat for material control tab to load (subsequent rows)" sap:VirtualizedContainerService.HintSize="713,106" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_10">
                      <ui:WaitUiElementAppear.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="31b6195a861d7589e17c7dbd4add5053" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Material Control' role='page tab' /&gt;&lt;java role='panel' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:WaitUiElementAppear.Target>
                    </ui:WaitUiElementAppear>
                    <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Supply Type" DisplayName="Get Row Item - BOM supply type (subsequent rows)" sap:VirtualizedContainerService.HintSize="713,64" sap2010:WorkflowViewState.IdRef="GetRowItem_11" Row="[row]">
                      <ui:GetRowItem.Value>
                        <OutArgument x:TypeArguments="ui:GenericValue">[bomValue]</OutArgument>
                      </ui:GetRowItem.Value>
                    </ui:GetRowItem>
                    <Assign DisplayName="Assign BOM field supply type subsequent row" sap:VirtualizedContainerService.HintSize="713,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[bomField]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">supply type</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into 'text Material' - BOM supply type subsequent rows" EmptyField="True" sap:VirtualizedContainerService.HintSize="713,134" sap2010:WorkflowViewState.IdRef="TypeInto_26" Text="[bomValue.Trim]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="29f8d49846fbf9e53991b5d9fd8302db" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Material Control tab page Supply TypeList of Values' role='text' /&gt;" WaitForReady="COMPLETE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Send Hotkey tab from supply type to next field subsequent row" sap:VirtualizedContainerService.HintSize="713,154" sap2010:WorkflowViewState.IdRef="SendHotkey_24" Key="tab" KeyModifiers="None" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="4ffa7e6ae06a7dddeb81a52c17ea213b" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Material Control tab page Supply TypeList of Values' role='text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File Error check supply type subsequent row" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="ErrorCheckSupplyType.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[transactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_BOMField">[bomField]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_ComponentNumber">[componentNumber]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_BOMValue">[bomValue]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Sub Inventory" DisplayName="Get Row Item - BOM subinventory (subsequent rows)" sap:VirtualizedContainerService.HintSize="713,64" sap2010:WorkflowViewState.IdRef="GetRowItem_12" Row="[row]">
                      <ui:GetRowItem.Value>
                        <OutArgument x:TypeArguments="ui:GenericValue">[bomValue]</OutArgument>
                      </ui:GetRowItem.Value>
                    </ui:GetRowItem>
                    <Assign DisplayName="Assign BOM field subinventory subsequent rows" sap:VirtualizedContainerService.HintSize="713,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[bomField]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">subinventory</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[bomValue Is Nothing]" DisplayName="If subinventory is blank then clear field" sap:VirtualizedContainerService.HintSize="713,281" sap2010:WorkflowViewState.IdRef="If_13">
                      <If.Then>
                        <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into - BOM subinventory subsequent rows if subinv is blank" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_31" Text=" ">
                          <ui:TypeInto.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="f79b96f491a70b378a8a03180473a25e" Selector="&lt;java name='Bills of Material *' role='internal frame' /&gt;&lt;java idx='2' name='SubinventoryList of Values' role='text' /&gt;" WaitForReady="COMPLETE">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                            </ui:Target>
                          </ui:TypeInto.Target>
                        </ui:TypeInto>
                      </If.Then>
                      <If.Else>
                        <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into - BOM subinventory subsequent rows if subinv is not blank" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_27" Text="[bomValue.Trim]">
                          <ui:TypeInto.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="f79b96f491a70b378a8a03180473a25e" Selector="&lt;java name='Bills of Material *' role='internal frame' /&gt;&lt;java idx='2' name='SubinventoryList of Values' role='text' /&gt;" WaitForReady="COMPLETE">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                            </ui:Target>
                          </ui:TypeInto.Target>
                        </ui:TypeInto>
                      </If.Else>
                    </If>
                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Send Hotkey tab from subinventory to next field subsequent rows" sap:VirtualizedContainerService.HintSize="713,154" sap2010:WorkflowViewState.IdRef="SendHotkey_26" Key="tab" KeyModifiers="None" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="6081c18d491e477037972d3461131794" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java idx='2' name='SubinventoryList of Values' role='text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File Error check subinventory subsequent rows" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="ErrorCheckSubinventory.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[transactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_BOMField">[bomField]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_ComponentNumber">[componentNumber]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_BOMValue">[bomValue]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Locator" DisplayName="Get Row Item - BOM locator (subsequent rows)" sap:VirtualizedContainerService.HintSize="713,64" sap2010:WorkflowViewState.IdRef="GetRowItem_13" Row="[row]">
                      <ui:GetRowItem.Value>
                        <OutArgument x:TypeArguments="ui:GenericValue">[bomValue]</OutArgument>
                      </ui:GetRowItem.Value>
                    </ui:GetRowItem>
                    <Assign DisplayName="Assign BOM field locator subsequent rowss" sap:VirtualizedContainerService.HintSize="713,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[bomField]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">locator</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[bomValue.Trim = &quot;...&quot;]" DisplayName="If - Clear BOM locator if just &quot;...&quot; (subsequent rows)" sap:VirtualizedContainerService.HintSize="713,207" sap2010:WorkflowViewState.IdRef="If_10">
                      <If.Then>
                        <Assign DisplayName="Assign - Clear bomValue if &quot;...&quot; (subsequent rows)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:GenericValue">[bomValue]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:GenericValue">[Nothing]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                    </If>
                    <If Condition="[bomValue Is Nothing]" DisplayName="If locator blank then clear field" sap:VirtualizedContainerService.HintSize="713,281" sap2010:WorkflowViewState.IdRef="If_12">
                      <If.Then>
                        <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into - BOM locator subsequent rows (blank)" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_32" Text=" ">
                          <ui:TypeInto.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="44e074006dcfd36e79d0b4b170200505" Selector="&lt;java name='Bills of Material *' role='internal frame' /&gt;&lt;java idx='2' name='Locator*List of Values' role='text' /&gt;" WaitForReady="COMPLETE">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                            </ui:Target>
                          </ui:TypeInto.Target>
                        </ui:TypeInto>
                      </If.Then>
                      <If.Else>
                        <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into - BOM locator subsequent rows" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_28" Text="[bomValue.Trim]">
                          <ui:TypeInto.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="44e074006dcfd36e79d0b4b170200505" Selector="&lt;java name='Bills of Material *' role='internal frame' /&gt;&lt;java idx='2' name='Locator*List of Values' role='text' /&gt;" WaitForReady="COMPLETE">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                            </ui:Target>
                          </ui:TypeInto.Target>
                        </ui:TypeInto>
                      </If.Else>
                    </If>
                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Send Hotkey tab from locator to next field subsequent rows" sap:VirtualizedContainerService.HintSize="713,154" sap2010:WorkflowViewState.IdRef="SendHotkey_28" Key="tab" KeyModifiers="None" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="bd940ef531202ac153e1a07baa90fa43" Selector="&lt;java name='Bills of Material *' role='internal frame' /&gt;&lt;java idx='2' name='Locator*List of Values' role='text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File Error check locator subsequent rows" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="ErrorCheckLocator.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[transactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_BOMField">[bomField]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_ComponentNumber">[componentNumber]</InArgument>
                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="in_BOMValue">[bomValue]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </If.Else>
              </If>
              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey control S (save file )" sap:VirtualizedContainerService.HintSize="1326,154" sap2010:WorkflowViewState.IdRef="SendHotkey_5" Key="&quot;s&quot;" KeyModifiers="Ctrl">
                <ui:SendHotkey.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="6eddcdb31dc9695cc97a76da7664ad42" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:SendHotkey.Target>
              </ui:SendHotkey>
              <ui:LogMessage sap2010:Annotation.AnnotationText="&quot;Added Oracle item seq &quot; + dtBOM(&quot;OP Seq&quot;).tostring.trim + &quot; for component &quot; + dtBOM(&quot;Part Number&quot;).tostring.trim + &quot; to assembly &quot; + transactionItem.SpecificContent(&quot;Part&quot;).ToString.Trim" DisplayName="Log Message for component added" sap:VirtualizedContainerService.HintSize="1326,163" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;Added Oracle item seq &quot; + dtBOM.rows(rowCounter-1).item(&quot;Sno.&quot;).ToString + &quot; for component &quot; + dtBOM.rows(rowCounter-1).item(&quot;Part Number&quot;).ToString +  &quot; to assembly &quot; + transactionItem.SpecificContent(&quot;Part&quot;).ToString.Trim]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey  shift page up (go to previous block)" sap:VirtualizedContainerService.HintSize="1326,154" sap2010:WorkflowViewState.IdRef="SendHotkey_14" Key="pgup" KeyModifiers="Shift" SpecialKey="True">
                <ui:SendHotkey.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="8cdc9beb6cecc030baee8f8f6c121417" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:SendHotkey.Target>
              </ui:SendHotkey>
              <Assign DisplayName="Assign increment loop counter" sap:VirtualizedContainerService.HintSize="1326,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                <Assign.To>
                  <OutArgument x:TypeArguments="ui:GenericValue">[rowCounter]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="ui:GenericValue">[rowCounter+ 1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[rowCounter &lt;= dtBOM.Rows.Count]" DisplayName="If - still in loop then re-query BOM because additional components selectors are inconsistent" sap:VirtualizedContainerService.HintSize="1326,1465" sap2010:WorkflowViewState.IdRef="If_11">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Sequence (if still in loop)" sap:VirtualizedContainerService.HintSize="376,1318" sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'text  Item' - Click in part number to prepare to re-query" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT">
                      <ui:Click.CursorPosition>
                        <ui:CursorPosition Position="Center">
                          <ui:CursorPosition.OffsetX>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetX>
                          <ui:CursorPosition.OffsetY>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetY>
                        </ui:CursorPosition>
                      </ui:Click.CursorPosition>
                      <ui:Click.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="d9892301f97a92cc9b17557905645bb5" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Item' role='text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:Click.Target>
                    </ui:Click>
                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'text  ItemList of Values' - Enter query mode (requery)" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="SendHotkey_10" Key="f11" KeyModifiers="None" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="8cdc9beb6cecc030baee8f8f6c121417" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                    <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'label  Enter-Query' - wait for ready to query (subsequent rows)" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_11">
                      <ui:WaitUiElementAppear.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="2351f13086debf9d8ee3fa8d648c0ded" Selector="&lt;java name='Enter-Query*' role='label' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:WaitUiElementAppear.Target>
                    </ui:WaitUiElementAppear>
                    <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into 'text  ItemList of Values' - Assy (requery)" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_29" Text="[transactionItem.SpecificContent(&quot;Part&quot;).ToString.Trim]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="57bcf271f64c9ee87dedd7b11dea7c39" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Item' role='text' /&gt;" WaitForReady="COMPLETE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey Query run assembly item inside BOM add loop" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="SendHotkey_11" Key="f11" KeyModifiers="Ctrl" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="48ac2be8ef43c5baa516793e4d0890c7" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Item' role='text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                    <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" sap2010:Annotation.AnnotationText="&lt;java idx='1' name='Bills of Material*' role='internal frame' /&gt;&#xA;&lt;java idx='6' name='Item Description' role='text' /&gt;&#xA;" DisplayName="Find Element 'text  Item Description' - Wait for BOM to load (subsequent rows)" sap:VirtualizedContainerService.HintSize="334,178" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_12">
                      <ui:WaitUiElementAppear.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="1b9de8b263c759a10e70080c65d24221" Selector="&lt;java idx='1' name='Bills of Material*' role='internal frame' /&gt;&lt;java name='Item Description' role='text' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:WaitUiElementAppear.Target>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:WaitUiElementAppear>
                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Send Hotkey 'text  Item Seq Required' - insert BOM component record" EmptyField="False" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="SendHotkey_12" Key="down" KeyModifiers="Ctrl" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="ad0419da7e2ee30d0c26d5d8d9e4137f" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;&lt;java idx='1' name='Item Seq Required' role='text' /&gt;" WaitForReady="COMPLETE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey to close Oracle BOM window" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="SendHotkey_13" Key="f4" KeyModifiers="None" SpecialKey="True">
                    <ui:SendHotkey.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="8d53b3287877a9251fe18614468a78f1" Selector="&lt;java name='Bills of Material*' role='internal frame' /&gt;">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:SendHotkey.Target>
                  </ui:SendHotkey>
                </If.Else>
              </If>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:WindowScope.Body>
    </ui:WindowScope>
    <Assign DisplayName="Assign out arguments" sap:VirtualizedContainerService.HintSize="873,60" sap2010:WorkflowViewState.IdRef="Assign_8">
      <Assign.To>
        <OutArgument x:TypeArguments="ui:GenericValue">[io_RowCounter]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="ui:GenericValue">[rowCounter]</InArgument>
      </Assign.Value>
    </Assign>
  </Sequence>
</Activity>